name: Release

on:
  push:
    tags:
      - 'v*.*.*'   # запускается при пуше тега вида v1.2.3
  workflow_dispatch:

permissions:
  contents: write   # нужно для публикации релиза

jobs:
  build-release:
    name: Build & Package (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: seanmiddleditch/gha-setup-ninja@v5

      # MSVC env (только на Windows)
      - name: MSVC Dev Cmd
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure (Release)
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DENABLE_IPO=ON

      - name: Build
        run: cmake --build build -j

      - name: Install to staging
        run: cmake --install build --prefix "$PWD/stage"
        shell: bash

      # Упаковка CPack в контролируемую папку build/pack
      - name: Package (CPack)
        working-directory: build
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cpack -G ZIP -B "$PWD/pack"
          else
            cpack -G ZIP -B "$PWD/pack"
            cpack -G TGZ -B "$PWD/pack"
          fi

      - name: List packages
        run: ls -lh build/pack || true
        shell: bash

      - name: Upload packages as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ runner.os }}
          path: |
            build/pack/*.zip
            build/pack/*.tar.gz
          if-no-files-found: error

  publish:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List downloaded artifacts
        run: |
          echo "Artifacts:"
          find dist -type f -maxdepth 3 -print

      - name: Create GitHub Release and upload assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/*.zip
            dist/**/*.tar.gz
          generate_release_notes: true